---
swagger: "2.0"
info:
  description: "API description for the ALAMEDA Predictor Variable Timeseries Classification\
    \ Toolkit. This description presents the RESTful interface by which the suite\
    \ of algorithms developed for the classification of the patient disease status\
    \ based on month-long data collected from wearables and PROs.\n\nEach algorithm\
    \ receives as input a CSV file containing timestamped results of PROs collected\
    \ from a patient, as well as _information aggregated at **day** level_ determined\
    \ from wearables (e.g. sum of steps, percentages of time per day in each type\
    \ of activity intensity level, detected activties or exercises, objectively measured\
    \ stiffness, brady / dyskenisia, detected fall).\n\nAlgorithms are selectable\
    \ by a *model* and are applicable per _disease_ (PD, MS, Stroke).\nThe algorithms\
    \ can be run in **evaluation** or **prediction** mode. \nIn **evaluation** mode,\
    \ the input CSV must contain both predictor and target variables, while the result\
    \ CSV will report on the *performance metrics* for each target variable.\nIn **prediction**\
    \ mode, the input CSV contains only predictor variables, while the result CSV\
    \ contains one or more target variables together with the probability distribution\
    \ for each target variable value.  "
  version: "1.0.0"
  title: "ALAMEDA Predictor Variable Timeseries Classification Toolkit"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "alexandru.sorici@upb.ro"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "varcls.alamedaproject.eu"
basePath: "/v1"
tags:
- name: "VarCls"
  description: "REST API calls for the ALAMEDA Predictor"
  externalDocs:
    description: "Find out more"
    url: "https://tinyurl.com/4ueffdm2"
schemes:
- "https"
- "http"
paths:
  /prepare_algorithm:
    post:
      tags:
      - "VarCls"
      summary: "Prepare execution of an ALAMEDA algorithm"
      description: "Prepare the execution of an ALAMEDA variable timeseries classification\
        \ algorithm by uploading the required CSV input file. The call will return\
        \ an ID of the file for use in the algorithm invocation. The algorithm to\
        \ be executed is identified through *model* and *disease* parameters. The\
        \ validity of the CSV input file is checked against these."
      operationId: "prepare_algorithm_post"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "model"
        in: "formData"
        description: "Name of the algorithm to be invoked later on"
        required: true
        type: "string"
        enum:
        - "PD_aggreg_1"
        - "Stroke_aggreg_1"
        - "MS_aggreg_1"
      - name: "disease"
        in: "formData"
        description: "Neurological Disease for which the algorithm will be applied"
        required: true
        type: "string"
        enum:
        - "PD"
        - "MS"
        - "Stroke"
      - name: "file"
        in: "formData"
        description: "Input CSV file to upload"
        required: true
        type: "file"
      responses:
        "200":
          description: "Successful file upload and validation"
          schema:
            type: "object"
            properties:
              fileID:
                type: "string"
                format: "uuid"
        "400":
          description: "Invalid input CSV for selected model and disease."
          schema:
            $ref: "#/definitions/ApiResponse"
      x-swagger-router-controller: "server.controllers.var_cls_controller"
  /apply_algorithm:
    post:
      tags:
      - "VarCls"
      summary: "Launch a classification algorithm into execution"
      description: "This is the main call which launches a classification algorithm\
        \ into execution. The type of the algorithm is determined by the _model_,\
        \ _disease_ and *fileID* parameters. The algorithm can be launched in *classification*\
        \ or *evaluation* mode. The former returns probability distributions over\
        \ the possible values of each target variable known to the algorithm. The\
        \ latter returns performance metrics for all the target variables included\
        \ in the uploaded CSV file."
      operationId: "apply_algorithm_post"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "config"
        description: "Config of the call specifying a structure containing model name,\
          \ disease name and uploaded input file ID"
        required: true
        schema:
          $ref: "#/definitions/AlgInvocation"
      responses:
        "201":
          description: "Algorithm succesfully launched"
          schema:
            $ref: "#/definitions/AlgInstance"
        "400":
          description: "Inexistent or invalid CSV file for given fileID and algorithm\
            \ invocation mode."
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "No algorithm found for submitted model name."
      x-swagger-router-controller: "server.controllers.var_cls_controller"
  /apply_algorithm/{algID}:
    get:
      tags:
      - "VarCls"
      summary: "Retrieve status and result of a launched algorithm instance identified\
        \ by algID"
      operationId: "apply_algorithm_alg_idget"
      produces:
      - "application/json"
      parameters:
      - name: "algID"
        in: "path"
        description: "ID of algorithm instance to return"
        required: true
        type: "string"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AlgInstance"
        "404":
          description: "No algorithm with the given algID is currently running or\
            \ has finished executing."
      x-swagger-router-controller: "server.controllers.var_cls_controller"
    delete:
      tags:
      - "VarCls"
      summary: "Stop a running execution or inform the server that the results of\
        \ the algorithm invocation identified by algID can be safely discarded"
      operationId: "apply_algorithm_alg_iddelete"
      produces:
      - "application/json"
      parameters:
      - name: "algID"
        in: "path"
        description: "ID of algorithm instance to return"
        required: true
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "404":
          description: "No algorithm with the given algID is currently running or\
            \ has finished executing."
      x-swagger-router-controller: "server.controllers.var_cls_controller"
definitions:
  AlgInvocation:
    type: "object"
    properties:
      model:
        type: "string"
        enum:
        - "PD_aggreg_1"
        - "Stroke_aggreg_1"
        - "MS_aggreg_1"
      disease:
        type: "string"
        enum:
        - "PD"
        - "MS"
        - "Stroke"
      mode:
        type: "string"
        enum:
        - "evaluate"
        - "classify"
      fileID:
        type: "string"
        format: "uuid"
        description: "ID of the CSV input file that has been uploaded prior to algorithm\
          \ invocation"
    xml:
      name: "AlgInvocation"
    example:
      mode: "evaluate"
      disease: "PD"
      model: "PD_aggreg_1"
      fileID: "e158503ac450435289b6b764bb82bcba"
  AlgInstance:
    type: "object"
    required:
    - "id"
    - "name"
    - "start_time"
    - "status"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      status:
        type: "string"
        enum:
        - "running"
        - "finished"
      start_time:
        type: "string"
        format: "date-time"
      results_uri:
        type: "string"
        format: "uri"
      result: 
        type: "object"
    xml:
      name: "AlgInstance"
    example:
      start_time: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      id: "e158503ac450435289b6b764bb82bcba"
      results_uri: "http://example.com/aeiou"
      status: "running"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
