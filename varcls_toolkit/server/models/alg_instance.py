# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server.models.base_model_ import Model
from server import util


class AlgInstance(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, name: str=None, status: str=None, start_time: datetime=None, results_uri: str=None, result: object=None):  # noqa: E501
        """AlgInstance - a model defined in Swagger

        :param id: The id of this AlgInstance.  # noqa: E501
        :type id: str
        :param name: The name of this AlgInstance.  # noqa: E501
        :type name: str
        :param status: The status of this AlgInstance.  # noqa: E501
        :type status: str
        :param start_time: The start_time of this AlgInstance.  # noqa: E501
        :type start_time: datetime
        :param results_uri: The results_uri of this AlgInstance.  # noqa: E501
        :type results_uri: str
        :param result: The result of this AlgInstance.  # noqa: E501
        :type result: object
        """
        self.swagger_types = {
            'id': str,
            'name': str,
            'status': str,
            'start_time': datetime,
            'results_uri': str,
            'result': object
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'status': 'status',
            'start_time': 'start_time',
            'results_uri': 'results_uri',
            'result': 'result'
        }

        self._id = id
        self._name = name
        self._status = status
        self._start_time = start_time
        self._results_uri = results_uri
        self._result = result

    @classmethod
    def from_dict(cls, dikt) -> 'AlgInstance':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AlgInstance of this AlgInstance.  # noqa: E501
        :rtype: AlgInstance
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this AlgInstance.


        :return: The id of this AlgInstance.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this AlgInstance.


        :param id: The id of this AlgInstance.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this AlgInstance.


        :return: The name of this AlgInstance.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this AlgInstance.


        :param name: The name of this AlgInstance.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def status(self) -> str:
        """Gets the status of this AlgInstance.


        :return: The status of this AlgInstance.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this AlgInstance.


        :param status: The status of this AlgInstance.
        :type status: str
        """
        allowed_values = ["running", "finished"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def start_time(self) -> datetime:
        """Gets the start_time of this AlgInstance.


        :return: The start_time of this AlgInstance.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time: datetime):
        """Sets the start_time of this AlgInstance.


        :param start_time: The start_time of this AlgInstance.
        :type start_time: datetime
        """
        if start_time is None:
            raise ValueError("Invalid value for `start_time`, must not be `None`")  # noqa: E501

        self._start_time = start_time

    @property
    def results_uri(self) -> str:
        """Gets the results_uri of this AlgInstance.


        :return: The results_uri of this AlgInstance.
        :rtype: str
        """
        return self._results_uri

    @results_uri.setter
    def results_uri(self, results_uri: str):
        """Sets the results_uri of this AlgInstance.


        :param results_uri: The results_uri of this AlgInstance.
        :type results_uri: str
        """

        self._results_uri = results_uri

    @property
    def result(self) -> object:
        """Gets the result of this AlgInstance.


        :return: The result of this AlgInstance.
        :rtype: object
        """
        return self._result

    @result.setter
    def result(self, result: object):
        """Sets the result of this AlgInstance.


        :param result: The result of this AlgInstance.
        :type result: object
        """

        self._result = result
